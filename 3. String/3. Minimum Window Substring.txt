/*
Given two strings s and t of lengths m and n respectively, return the minimum window substring of s such that every character in t (including duplicates) is included in the window. If there is no such substring, return the empty string "".

The testcases will be generated such that the answer is unique.

A substring is a contiguous sequence of characters within the string.

 

Example 1:

Input: s = "ADOBECODEBANC", t = "ABC"
Output: "BANC"
Explanation: The minimum window substring "BANC" includes 'A', 'B', and 'C' from string t.
Example 2:

Input: s = "a", t = "a"
Output: "a"
Explanation: The entire string s is the minimum window.
Example 3:

Input: s = "a", t = "aa"
Output: ""
Explanation: Both 'a's from t must be included in the window.
Since the largest window of s only has one 'a', return empty string.
 

Constraints:

m == s.length
n == t.length
1 <= m, n <= 105
s and t consist of uppercase and lowercase English letters.
*/

class Solution {
public:
    string minWindow(string s, string t) {
        int n = s.length();
        int m = t.length();
        vector<int> sfreq(256,0);
        vector<int> tfreq(256,0);
        for(auto &c : t) {
            tfreq[c] += 1;
        }
        int start = 0;
        int end = 0;
        int cnt = 0;
        int len = n+1;
        int window_start = 0;
        while(end<n) {
            char c = s[end];
            if(tfreq[c]>0 && sfreq[c]<tfreq[c]) {
                ++cnt;
            }
            ++end;
            sfreq[c] += 1;
            while(cnt==m) {
                char ch = s[start];
                if(tfreq[ch]>0 && sfreq[ch]==tfreq[ch]) {
                    if(end-start < len) {
                        window_start = start;
                        len = end-start;
                    }
                    --cnt;
                }
                sfreq[ch] -= 1;
                ++start;
            }
        }
        if(len==n+1) {
            return "";
        }
        return s.substr(window_start,len);
    }
};